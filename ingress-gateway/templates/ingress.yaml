{{- if .Values.ingress.enabled -}}
{{- $fullName := include "ingress-gateway.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "ingress-gateway.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.ingress.hosts }}
  rules:
    {{- range $host := . }} #inicio loop inteirar sobre a lista de host
    - host: {{ $host.host }} #define o host/dom√≠nio atual no loop.
      http:
        paths:
          {{- range $path := $host.paths }} #inicia o loop para inteirar sobre a lista de paths associados ao host especificado
          - path: {{ $path }} #recebe o o caminho atual no loop
          {{- with $pathType := "Prefix" }} #prefix por default
            pathType: {{ $pathType }}
          {{- end }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
          {{- end }}
    {{- end }}
  {{- end }}
{{- end }}