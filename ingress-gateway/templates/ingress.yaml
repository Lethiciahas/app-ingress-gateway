{{- if .Values.ingress.enabled -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{- include "ingress-gateway.fullname" }}
  labels:
    {{- include "ingress-gateway.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.ingress.Service }}
  rules:
    {{- range $service := . }} #inteirar sore a lista de serviços
    {{- range $route := $service.routes }} #inteiras sobre rotas associadas ao serviço
    {{- range $host := $route.hosts }} #inteirar sobre os hosts associados a esta rota
    - host: {{ $host.host }} #recbe o dominio associado
      http:
        paths:
        {{- range $path := $route.paths }} #inteirar sobre os caminhos associados a esta rota
         - path: {{ $path.path }} #recebe o path correspondente a esta regra
            backend:
              service:
                name: {{ $service.serviceName }}
                port:
                  number: {{ $svcPort }}
        {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
  {{- end }}
{{- end }}